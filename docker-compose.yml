version: '3.1'

services:
  dc:
    build: streamsets
    ports:
      - "18630:18630"
    restart: on-failure
    volumes:
      - sdc-data:/data
    extra_hosts:
      - "daria-test2:10.0.0.28"

  agent:
    build: agent
    restart: always
    environment:
      STREAMSETS_USERNAME: 'admin'
      STREAMSETS_PASSWORD: 'admin'
      STREAMSETS_URL: 'http://dc:18630'
      LOG_FILE_PATH: '/var/log/agent.log'
      ANODOT_API_URL: 'http://daria-test2'
      SDC_DATA_PATH: '/sdc-data'
    stdin_open: true
    tty: true
    depends_on:
      - dc
      - mongo
    volumes:
      - sdc-data:/sdc-data
      - agent-data:/usr/src/app/data

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - /data/db
      - ./test-datasets:/home
      - ./volumes/mongo-initdb:/docker-entrypoint-initdb.d

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: agent-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
      KAFKA_CREATE_TOPICS: "test:1:1,test-json:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./test-datasets:/home

volumes:
  sdc-data:
  agent-data:
