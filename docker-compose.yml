version: '3.1'

services:
  dc:
    build: streamsets
    ports:
      - "18630:18630"
    restart: on-failure
    volumes:
      - sdc-data:/data
#    environment:
#      SDC_CONF_PARSER_LIMIT: 2048576
#      SDC_CONF_RUNNER_THREAD_POOL_SIZE: "200"

#    extra_hosts:
#      - "daria-test2:10.0.0.28"

  agent:
    build: agent
    restart: always
    container_name: anodot-agent
    environment:
      STREAMSETS_USERNAME: 'admin'
      STREAMSETS_PASSWORD: 'admin'
      STREAMSETS_URL: 'http://dc:18630'
      LOG_FILE_PATH: '/var/log/agent.log'
      ANODOT_API_URL: 'https://feature-agent-mysql.ano-dev.com'
      SDC_DATA_PATH: '/sdc-data'
      ENV_PROD: 'false'
    stdin_open: true
    tty: true
    depends_on:
      - dc
      - mongo
    volumes:
      - sdc-data:/sdc-data
      - agent-data:/usr/src/app/data

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - /data/db
      - ./test-datasets:/home
      - ./volumes/mongo-initdb:/docker-entrypoint-initdb.d

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: agent-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "test:1:1,test-json:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./test-datasets:/home

  influx:
    image: influxdb
    ports:
      - "8086:8086"
    volumes:
      - /var/lib/influxdb
      - ./volumes/influx-initdb:/docker-entrypoint-initdb.d
    environment:
      INFLUXDB_DB: test

  squid:
    image: datadog/squid
    extra_hosts:
      - "daria-test2:10.0.0.28"

  mysql:
    image: mysql
    container_name: agent-mysql
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql
      - ./volumes/mysql-initdb:/docker-entrypoint-initdb.d

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: test
      POSTGRES_PASSWORD: password
    volumes:
      - /var/lib/postgresql/data
      - ./volumes/postgres-initdb:/docker-entrypoint-initdb.d


volumes:
  sdc-data:
  agent-data:
