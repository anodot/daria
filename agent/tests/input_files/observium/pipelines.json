[
  {
    "source": "observium",
    "pipeline_id": "observium_ports",
    "interval": 3600,
    "delay": 3,
    "query": "select ifInBroadcastPkts, ifInErrors_rate, ifOctets_rate, ifOutUcastPkts, ifInNUcastPkts, ifUcastPkts_rate, ifInDiscards_rate, ifOutNUcastPkts_rate, ifOutBroadcastPkts_rate, ifOutMulticastPkts_rate, ifInUcastPkts, ifDiscards_rate, ifInOctets_rate, ifOutErrors, ifOutNUcastPkts, ifInOctets_perc, ifInNUcastPkts_rate, ifOutUcastPkts_rate, ifInDiscards, ifOutBroadcastPkts, ifInBroadcastPkts_rate, port_mcbc, ifInErrors, ifOutDiscards, ifOutOctets_rate, ifOutMulticastPkts, ifInUcastPkts_rate, ifOutOctets_perc, ifOutDiscards_rate, ifOutOctets, ifInMulticastPkts_rate, ifOutErrors_rate, ifInOctets, ifErrors_rate, ifInMulticastPkts, ifSpeed, port_label, poll_time, ifType, d.sysName, dl.location from ports p join devices d on d.device_id = p.device_id join devices_locations dl on dl.device_id = p.device_id",
    "default_values_type": "ports",
    "lookups": {
      "DEST_GROUP_CATEGORY": {
        "type": "file",
        "path": "/usr/src/app/tests/input_files/observium/DEST_GROUP_CATEGORY",
        "format": "CSV"
      }
    },
    "dimensions": [
      "INTERFACE_SPEED",
      "Location",
      "DEST_STATE",
      "PARENT_ELEMENT_LOCATION"
    ],
    "dimension_configurations": {
      "INTERFACE_SPEED": {
        "value_path": "ifSpeed"
      },
      "Location": {
        "value_path": "location"
      },
      "DEST_STATE": {
        "value_path": "port_label",
        "transformations": [
          {
            "type": "function",
            "name": "to_upper"
          },
          {
            "type": "lookup",
            "name": "DEST_GROUP_CATEGORY",
            "key": "ABBREVIATION",
            "value": "STATE",
            "compare_function": "contains",
            "default": "other"
          }
        ]
      },
      "PARENT_ELEMENT_LOCATION": {
        "value_path": "ifType",
        "transformations": [
          {
            "type": "function",
            "name": "regex_substring",
            "args": [".+\\.(.+)", "\\g<1>"]
          }
        ]
      }
    }
  }
]